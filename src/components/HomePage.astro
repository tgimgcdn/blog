---
import { Card, CardGrid } from '@astrojs/starlight/components';

// 获取博客文章数据
const starlightBlog = Astro.locals.starlightBlog;
let posts = [];
if (starlightBlog && starlightBlog.posts) {
  posts = starlightBlog.posts;
}

// 对文章进行排序：首先是精选文章，然后按日期降序
const sortedPosts = [...posts].sort((a, b) => {
  // 首先按精选状态排序
  if (a.entry.data.featured && !b.entry.data.featured) return -1;
  if (!a.entry.data.featured && b.entry.data.featured) return 1;
  
  // 然后按日期排序（从新到旧）
  const dateA = a.entry.data.pubDate || a.entry.data.date;
  const dateB = b.entry.data.pubDate || b.entry.data.date;
  return new Date(dateB).getTime() - new Date(dateA).getTime();
});

// 只获取前9篇文章
const displayPosts = sortedPosts.slice(0, 9);
const hasMorePosts = sortedPosts.length > 9;

// 格式化日期
function formatDate(dateString) {
  return new Date(dateString).toLocaleDateString('zh-CN');
}

// 默认缩略图
const defaultThumbnail = "/social-card.webp";
---

<main class="grid-container">
  <div class="custom-grid">
    {displayPosts.map(post => (
      <div class="grid-item">
        <div class="grid-item-content">
          <a href={post.href} class="thumbnail-link">
            <div class="thumbnail">
              <img 
                src={post.entry.data.thumbnail || defaultThumbnail} 
                alt={post.title}
                onerror="this.src='/social-card.webp'"
              />
            </div>
          </a>
          <div class="content">
            <a href={post.href} class="title-link">
              <h3 class="title" title={post.title}>
                {post.entry.data.featured && <span class="featured-star">⭐</span>}
                {post.title}
              </h3>
            </a>
            <p class="excerpt">{post.entry.data.description || post.entry.data.excerpt || ''}</p>
            <div class="meta">
              <span class="category">{post.entry.data.category || '未分类'}</span>
              <time class="date">{formatDate(post.entry.data.pubDate || post.entry.data.date)}</time>
            </div>
            {post.entry.data.tags && (
              <div class="tags">
                {post.entry.data.tags.map(tag => (
                  <a href={`/tags/${tag}`} class="tag">#{tag}</a>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
    ))}
  </div>
</main>

<style>
  .grid-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem;
  }
  
  .custom-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
    margin-top: 2rem;
  }
  
  .grid-item {
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s, box-shadow 0.2s;
    height: 100%;
    background-color: var(--sl-color-bg);
  }
  
  .grid-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);
  }
  
  .grid-item-content {
    display: flex;
    flex-direction: column;
    height: 100%;
  }
  
  .thumbnail-link {
    display: block;
    text-decoration: none;
  }
  
  .thumbnail {
    height: 180px;
    overflow: hidden;
  }
  
  .thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s;
  }
  
  .grid-item:hover .thumbnail img {
    transform: scale(1.05);
  }
  
  .content {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }
  
  .title-link {
    text-decoration: none;
    color: inherit;
  }
  
  .title {
    font-size: 1.1rem;
    margin: 0 0 0.5rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    color: var(--sl-color-text);
  }
  
  .featured-star {
    color: gold;
    margin-right: 0.25rem;
  }
  
  .excerpt {
    font-size: 0.9rem;
    line-height: 1.4;
    margin: 0 0 0.75rem;
    color: var(--sl-color-text-accent);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .meta {
    display: flex;
    justify-content: space-between;
    font-size: 0.8rem;
    margin-bottom: 0.5rem;
    color: var(--sl-color-gray-3);
  }
  
  .category {
    padding: 0.15rem 0.5rem;
    background-color: var(--sl-color-accent-low);
    border-radius: 99px;
    color: var(--sl-color-accent);
  }
  
  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    font-size: 0.75rem;
  }
  
  .tag {
    color: var(--sl-color-text-accent);
    text-decoration: none;
    transition: color 0.2s;
  }
  
  .tag:hover {
    color: var(--sl-color-accent);
    text-decoration: underline;
  }
  
  /* 响应式设计 */
  @media (max-width: 768px) {
    .custom-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (max-width: 480px) {
    .custom-grid {
      grid-template-columns: 1fr;
    }
  }
</style> 
