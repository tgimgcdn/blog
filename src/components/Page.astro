---
import { Card, CardGrid } from '@astrojs/starlight/components';
import DefaultPage from '@astrojs/starlight/components/StarlightPage.astro';
import HomePage from './HomePage.astro';
import BackToTop from './BackToTop.astro';

// 从属性获取当前页面信息
const { data, ...props } = Astro.props;
const isHomePage = Astro.url.pathname === '/' || Astro.url.pathname === '/index.html';

// 检查是否为博客页面（URL中包含/blog/）
const isBlogPage = Astro.url.pathname.includes('/blog/');

// 如果是首页，处理博客文章的逻辑
let displayPosts = [];
let hasMorePosts = false;

if (isHomePage && Astro.locals.starlightBlog) {
  // 获取博客文章数据
  const { posts } = Astro.locals.starlightBlog;

  // 对文章进行排序：首先是精选文章，然后按日期降序
  const sortedPosts = [...posts].sort((a, b) => {
    // 首先按精选状态排序
    if (a.entry.data.featured && !b.entry.data.featured) return -1;
    if (!a.entry.data.featured && b.entry.data.featured) return 1;
    
    // 然后按日期排序（从新到旧）
    return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();
  });

  // 只获取前9篇文章
  displayPosts = sortedPosts.slice(0, 9);
  hasMorePosts = sortedPosts.length > 9;
}

// 格式化日期
function formatDate(dateString) {
  return new Date(dateString).toLocaleDateString('zh-CN');
}
---

{isHomePage ? (
  <HomePage />
) : (
  <DefaultPage {...props} data={data}>
    <slot />
  </DefaultPage>
)}

{/* 在所有页面显示返回顶部按钮 */}
<BackToTop />

<style>
  .home-page {
    margin: 0;
    padding: 0;
    width: 100%;
  }
  
  .hero {
    background-color: var(--sl-color-bg-accent);
    padding: 4rem 0;
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .hero h1 {
    font-size: 3rem;
    margin: 0 0 1rem;
    color: var(--sl-color-white);
  }
  
  .tagline {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    color: var(--sl-color-gray-1);
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .actions {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }
  
  .action {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1.25rem;
    border-radius: 999px;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
  }
  
  .primary {
    background-color: var(--sl-color-text-accent);
    color: var(--sl-color-bg);
  }
  
  .primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  .secondary {
    background-color: transparent;
    border: 1px solid var(--sl-color-gray-5);
    color: var(--sl-color-text);
  }
  
  .secondary:hover {
    background-color: var(--sl-color-gray-6);
  }
  
  h2 {
    margin: 3rem 0 2rem;
    text-align: center;
    font-size: 2rem;
  }
  
  .card-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    font-size: 0.9rem;
    color: var(--sl-color-gray-3);
    margin-top: 0.5rem;
  }
  
  .card-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .tag {
    color: var(--sl-color-text-accent);
    font-size: 0.85rem;
  }
  
  .read-more {
    margin-top: 1rem;
  }
  
  .read-more a {
    color: var(--sl-color-text-accent);
    text-decoration: none;
    font-weight: 500;
  }
  
  .read-more a:hover {
    text-decoration: underline;
  }
  
  .see-all {
    text-align: center;
    margin: 2rem 0;
  }
  
  .action-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background-color: var(--sl-color-accent-low);
    color: var(--sl-color-accent);
    padding: 0.5rem 1.25rem;
    border-radius: 999px;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
  }
  
  .action-button:hover {
    background-color: var(--sl-color-accent);
    color: var(--sl-color-white);
    transform: translateY(-2px);
  }
</style> 
