---
import { Card, CardGrid } from '@astrojs/starlight/components';
import DefaultPage from '@astrojs/starlight/components/DefaultPage.astro';
import HomePage from '@astrojs/starlight/components/HomePage.astro';
import { getEntryBySlug } from '@astrojs/starlight/content';
import { getImage } from '@astrojs/image';

const { entry } = Astro.props;
const isHomePage = entry.data.layout === 'home';
const isBlogPage = entry.data.layout === 'blog';
const isSplashTemplate = entry.data.template === 'splash';

// 获取所有博客文章并按日期排序
const blogPosts = await Astro.glob('../../content/blog/**/*.md');
const sortedPosts = blogPosts
  .sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime())
  .slice(0, 9); // 只显示前9篇文章
---

{isHomePage ? (
  <div class="splash-with-nav">
    <div class="mobile-nav-toggle">
      <button class="hamburger" aria-label="打开菜单">
        <span></span>
        <span></span>
        <span></span>
      </button>
    </div>
    <HomePage entry={entry} />
  </div>
) : isBlogPage ? (
  <DefaultPage entry={entry}>
    <CardGrid>
      {sortedPosts.map((post) => (
        <Card
          title={post.frontmatter.title}
          href={post.url}
          cta="阅读全文"
          icon="book"
        >
          {post.frontmatter.description}
        </Card>
      ))}
    </CardGrid>
  </DefaultPage>
) : (
  <DefaultPage entry={entry}>
    <slot />
  </DefaultPage>
)}

<script>
  // 处理外部链接
  function processExternalLinks() {
    const currentDomain = window.location.hostname;
    const links = document.querySelectorAll('a[href]');
    
    links.forEach(link => {
      try {
        const url = new URL(link.href);
        if (url.hostname !== currentDomain && url.protocol.startsWith('http')) {
          // 使用base64编码URL
          const encodedUrl = btoa(link.href);
          link.href = `/link?url=${encodedUrl}`;
        }
      } catch (e) {
        // 如果URL解析失败，保持原样
      }
    });
  }

  // 页面加载时处理链接
  document.addEventListener('DOMContentLoaded', processExternalLinks);

  // 使用MutationObserver监听DOM变化
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.type === 'childList') {
        processExternalLinks();
      }
    });
  });

  observer.observe(document.body, {
    childList: true,
    subtree: true
  });

  // 处理移动端导航
  document.addEventListener('DOMContentLoaded', () => {
    const hamburger = document.querySelector('.hamburger');
    const navMenu = document.querySelector('.sl-nav');
    
    if (hamburger && navMenu) {
      hamburger.addEventListener('click', () => {
        hamburger.classList.toggle('active');
        navMenu.classList.toggle('active');
      });
    }
  });
</script>

<style>
  .splash-with-nav {
    position: relative;
  }

  .mobile-nav-toggle {
    display: none;
  }

  @media (max-width: 768px) {
    .mobile-nav-toggle {
      display: block;
      position: fixed;
      top: 1rem;
      right: 1rem;
      z-index: 1000;
    }

    .hamburger {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      width: 30px;
      height: 21px;
      background: transparent;
      border: none;
      cursor: pointer;
      padding: 0;
      z-index: 1001;
    }

    .hamburger span {
      width: 100%;
      height: 3px;
      background-color: var(--sl-color-text);
      border-radius: 3px;
      transition: all 0.3s ease;
    }

    .hamburger.active span:nth-child(1) {
      transform: translateY(9px) rotate(45deg);
    }

    .hamburger.active span:nth-child(2) {
      opacity: 0;
    }

    .hamburger.active span:nth-child(3) {
      transform: translateY(-9px) rotate(-45deg);
    }

    .sl-nav {
      position: fixed;
      top: 0;
      right: -100%;
      width: 80%;
      max-width: 300px;
      height: 100vh;
      background-color: var(--sl-color-bg);
      padding: 4rem 2rem 2rem;
      transition: right 0.3s ease;
      box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);
      z-index: 999;
    }

    .sl-nav.active {
      right: 0;
    }
  }

  .home-page {
    margin: 0;
    padding: 0;
    width: 100%;
  }
  
  .hero {
    background-color: var(--sl-color-bg-accent);
    padding: 4rem 0;
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .hero h1 {
    font-size: 3rem;
    margin: 0 0 1rem;
    color: var(--sl-color-white);
  }
  
  .tagline {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    color: var(--sl-color-gray-1);
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .actions {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }
  
  .action {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1.25rem;
    border-radius: 999px;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
  }
  
  .primary {
    background-color: var(--sl-color-text-accent);
    color: var(--sl-color-bg);
  }
  
  .primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  .secondary {
    background-color: transparent;
    border: 1px solid var(--sl-color-gray-5);
    color: var(--sl-color-text);
  }
  
  .secondary:hover {
    background-color: var(--sl-color-gray-6);
  }
  
  h2 {
    margin: 3rem 0 2rem;
    text-align: center;
    font-size: 2rem;
  }
  
  .card-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    font-size: 0.9rem;
    color: var(--sl-color-gray-3);
    margin-top: 0.5rem;
  }
  
  .card-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .tag {
    color: var(--sl-color-text-accent);
    font-size: 0.85rem;
  }
  
  .read-more {
    margin-top: 1rem;
  }
  
  .read-more a {
    color: var(--sl-color-text-accent);
    text-decoration: none;
    font-weight: 500;
  }
  
  .read-more a:hover {
    text-decoration: underline;
  }
  
  .see-all {
    text-align: center;
    margin: 2rem 0;
  }
  
  .action-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background-color: var(--sl-color-accent-low);
    color: var(--sl-color-accent);
    padding: 0.5rem 1.25rem;
    border-radius: 999px;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
  }
  
  .action-button:hover {
    background-color: var(--sl-color-accent);
    color: var(--sl-color-white);
    transform: translateY(-2px);
  }
</style> 
