import { Icon } from '@astrojs/starlight/components';

interface Props {
  href: string;
  variant?: 'primary' | 'secondary' | 'minimal';
  icon?: string;
  class?: string;
}

const { href, variant = 'primary', icon, class: className } = Astro.props;

// 检查是否是外部链接
function isExternalLink(url: string) {
  try {
    const urlObj = new URL(url);
    const siteUrl = new URL(Astro.site);
    const siteHostname = siteUrl.hostname;
    
    // 检查是否是本域名或子域名
    const isSameDomain = urlObj.hostname === siteHostname || 
                        urlObj.hostname.endsWith('.' + siteHostname) ||
                        siteHostname.endsWith('.' + urlObj.hostname);
    
    // 如果不是本域名或子域名，且是http链接，则进行中转
    return !isSameDomain && urlObj.protocol.startsWith('http');
  } catch (e) {
    return false;
  }
}

// 处理外部链接
const finalHref = isExternalLink(href) ? `/link?url=${btoa(href)}` : href;

<a href={finalHref} class:list={['sl-button', `sl-button-${variant}`, className]}>
  <slot />
  {icon && <Icon name={icon} />}
</a>

<style>
  .sl-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .sl-button-primary {
    background-color: var(--sl-color-accent);
    color: white;
  }

  .sl-button-primary:hover {
    background-color: var(--sl-color-accent-high);
    transform: translateY(-2px);
  }

  .sl-button-secondary {
    background-color: var(--sl-color-gray-5);
    color: var(--sl-color-text);
  }

  .sl-button-secondary:hover {
    background-color: var(--sl-color-gray-4);
    transform: translateY(-2px);
  }

  .sl-button-minimal {
    color: var(--sl-color-text);
  }

  .sl-button-minimal:hover {
    color: var(--sl-color-accent);
  }
</style> 
