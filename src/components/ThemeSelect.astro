---
import Default from '@astrojs/starlight/components/ThemeSelect.astro';
---

<button id="theme-toggle" aria-label="切换主题">
  <svg class="sun-and-moon" aria-hidden="true" width="24" height="24" viewBox="0 0 24 24">
    <mask class="moon" id="moon-mask">
      <rect x="0" y="0" width="100%" height="100%" fill="white" />
      <circle cx="24" cy="10" r="6" fill="black" />
    </mask>
    <circle class="sun" cx="12" cy="12" r="6" mask="url(#moon-mask)" fill="currentColor" />
    <g class="sun-beams" stroke="currentColor">
      <line x1="12" y1="1" x2="12" y2="3" />
      <line x1="12" y1="21" x2="12" y2="23" />
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64" />
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78" />
      <line x1="1" y1="12" x2="3" y2="12" />
      <line x1="21" y1="12" x2="23" y2="12" />
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36" />
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22" />
    </g>
  </svg>
</button>

<script>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  }

  document.getElementById('theme-toggle')?.addEventListener('click', handleToggleClick);
</script>

<style>
  #theme-toggle {
    cursor: pointer;
    border: 0;
    opacity: 0.8;
    padding: 0.5rem;
    border-radius: 0.5rem;
    background: none;
    color: var(--sl-color-text);
    transition: opacity 0.2s ease;
  }

  #theme-toggle:hover {
    opacity: 1;
  }

  .sun-and-moon {
    display: block;
  }

  .sun-and-moon > .sun {
    transform-origin: center;
    transition: transform 0.5s cubic-bezier(0.5, 0, 0.25, 1.25);
  }

  .sun-and-moon > .sun-beams {
    stroke-width: 2px;
    transform-origin: center;
    transition: transform 0.5s cubic-bezier(0.5, 0, 0.25, 1.25), opacity 0.5s cubic-bezier(0.5, 0, 0.25, 1.25);
  }

  .dark .sun-and-moon > .sun {
    transform: scale(1.75);
  }

  .dark .sun-and-moon > .sun-beams {
    transform: rotateZ(-25deg);
    opacity: 0;
  }

  .dark .sun-and-moon > .moon > circle {
    transform: translateX(-7px);
  }

  @media (prefers-reduced-motion: no-preference) {
    .sun-and-moon > .sun {
      transition: transform 0.5s cubic-bezier(0.5, 0, 0.25, 1.25);
    }

    .sun-and-moon > .sun-beams {
      transition: transform 0.5s cubic-bezier(0.5, 0, 0.25, 1.25), opacity 0.5s cubic-bezier(0.5, 0, 0.25, 1.25);
    }

    .dark .sun-and-moon > .sun {
      transform: scale(1.75);
    }

    .dark .sun-and-moon > .sun-beams {
      transform: rotateZ(-25deg);
      opacity: 0;
    }
  }
</style> 
