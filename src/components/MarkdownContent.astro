---
// src/components/MarkdownContent.astro
// 这个组件结合了starlight-blog和starlight-image-zoom的功能
import StarlightBlog from 'starlight-blog/overrides/MarkdownContent.astro';
import StarlightImageZoom from 'starlight-image-zoom/components/ImageZoom.astro';
import Comments from 'starlight-giscus/components/Comments.astro';
---

<StarlightImageZoom />
<StarlightBlog>
  <slot />
  <Comments />
</StarlightBlog>

<script>
  // 等待 DOM 加载完成
  function waitForDOM() {
    return new Promise((resolve) => {
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', resolve);
      } else {
        resolve();
      }
    });
  }

  // 等待 Giscus iframe 加载
  function waitForGiscus() {
    return new Promise((resolve) => {
      const checkGiscus = () => {
        const giscusFrame = document.querySelector('iframe.giscus-frame');
        if (giscusFrame) {
          console.log('[Giscus] iframe 已加载');
          resolve(giscusFrame);
        } else {
          console.log('[Giscus] 等待 iframe 加载...');
          setTimeout(checkGiscus, 1000);
        }
      };
      checkGiscus();
    });
  }

  // 设置主题观察器
  function setupThemeObserver(giscusFrame) {
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.attributeName === 'data-theme') {
          const theme = document.documentElement.getAttribute('data-theme');
          console.log('[主题切换] 检测到主题变化:', theme);
          
          if (giscusFrame && giscusFrame.contentWindow) {
            console.log('[主题切换] 找到 Giscus iframe，发送主题更新消息');
            giscusFrame.contentWindow.postMessage({
              giscus: {
                setConfig: {
                  theme: theme === 'dark' ? 'dark_dimmed' : 'light'
                }
              }
            }, 'https://giscus.app');
          } else {
            console.log('[主题切换] 未找到 Giscus iframe 或 contentWindow');
          }
        }
      });
    });

    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['data-theme']
    });
  }

  // 主函数
  async function init() {
    try {
      // 等待 DOM 加载完成
      await waitForDOM();
      
      // 处理外链
      if (window.handleExternalLinks) {
        console.log('[Markdown处理] 调用外链处理函数处理Markdown生成的链接');
        window.handleExternalLinks();
      }

      // 等待 Giscus iframe 加载并设置主题观察器
      const giscusFrame = await waitForGiscus();
      setupThemeObserver(giscusFrame);
    } catch (error) {
      console.error('[初始化错误]', error);
    }
  }

  // 启动初始化
  init();
</script> 
