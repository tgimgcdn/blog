---
// src/components/MarkdownContent.astro
// 这个组件结合了starlight-blog和starlight-image-zoom的功能
import StarlightBlog from 'starlight-blog/overrides/MarkdownContent.astro';
import StarlightImageZoom from 'starlight-image-zoom/components/ImageZoom.astro';
import Comments from 'starlight-giscus/components/Comments.astro';

// 检查当前页面是否启用了评论
const { entry } = Astro.props;
const enableComments = entry?.data?.giscus !== false;
---

<StarlightImageZoom />
<StarlightBlog>
  <slot />
  {enableComments && <Comments />}
</StarlightBlog>

<script>
  // 等待 Giscus iframe 加载
  function waitForGiscus() {
    return new Promise((resolve) => {
      // 如果已经存在 iframe，直接返回
      const existingFrame = document.querySelector('iframe.giscus-frame');
      if (existingFrame) {
        console.log('[Giscus] iframe 已存在');
        resolve(existingFrame);
        return;
      }

      // 监听 Giscus 的加载事件
      window.addEventListener('message', function giscusListener(event) {
        if (event.origin !== 'https://giscus.app') return;
        if (!(typeof event.data === 'object' && event.data.giscus)) return;

        // 处理各种 Giscus 状态
        if (event.data.giscus.loadingState === 'ready') {
          console.log('[Giscus] 加载完成');
          window.removeEventListener('message', giscusListener);
          const giscusFrame = document.querySelector('iframe.giscus-frame');
          if (giscusFrame) {
            resolve(giscusFrame);
          }
        } else if (event.data.giscus.loadingState === 'error') {
          console.log('[Giscus] 加载出错，可能是新文章还没有评论');
          window.removeEventListener('message', giscusListener);
          resolve(null);
        }
      });

      // 设置超时检查
      let attempts = 0;
      const maxAttempts = 10;
      const checkInterval = setInterval(() => {
        const giscusFrame = document.querySelector('iframe.giscus-frame');
        if (giscusFrame) {
          console.log('[Giscus] iframe 已加载');
          clearInterval(checkInterval);
          resolve(giscusFrame);
        } else if (++attempts >= maxAttempts) {
          console.log('[Giscus] 加载超时');
          clearInterval(checkInterval);
          resolve(null);
        }
      }, 1000);
    });
  }

  // 设置主题观察器
  function setupThemeObserver(giscusFrame) {
    if (!giscusFrame) {
      console.log('[主题切换] Giscus iframe 未找到，无法设置主题观察器');
      return;
    }

    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.attributeName === 'data-theme') {
          const theme = document.documentElement.getAttribute('data-theme');
          console.log('[主题切换] 检测到主题变化:', theme);
          
          try {
            giscusFrame.contentWindow.postMessage({
              giscus: {
                setConfig: {
                  theme: theme === 'dark' ? 'dark_dimmed' : 'light'
                }
              }
            }, 'https://giscus.app');
            console.log('[主题切换] 主题更新消息已发送');
          } catch (error) {
            console.error('[主题切换] 发送消息失败:', error);
          }
        }
      });
    });

    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['data-theme']
    });
  }

  // 主函数
  async function init() {
    try {
      // 检查是否存在 Giscus iframe
      const giscusFrame = document.querySelector('iframe.giscus-frame');
      if (!giscusFrame) {
        console.log('[初始化] 未找到 Giscus iframe，跳过初始化');
        return;
      }

      // 等待 Giscus iframe 加载
      const frame = await waitForGiscus();
      
      // 设置主题观察器
      if (frame) {
        setupThemeObserver(frame);
      }

      // 处理外链
      if (typeof window.handleExternalLinks === 'function') {
        console.log('[Markdown处理] 调用外链处理函数处理Markdown生成的链接');
        window.handleExternalLinks();
      }
    } catch (error) {
      console.error('[初始化错误]', error);
    }
  }

  // 确保在 DOM 加载完成后再执行
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }
</script>

<style>
  /* 隐藏 Giscus 加载错误消息 */
  .giscus-frame {
    min-height: 200px;
  }
  
  /* 当 Giscus 加载失败时显示友好的提示 */
  .giscus-frame:not([src])::after {
    content: '评论区加载中...';
    display: block;
    text-align: center;
    padding: 2rem;
    color: var(--sl-color-text-accent);
  }
</style> 
