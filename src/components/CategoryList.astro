---
// 从 props 获取分类
const { category } = Astro.props;

// 从 starlightBlog 获取文章数据
const starlightBlog = Astro.locals?.starlightBlog;
let posts = [];

if (starlightBlog && starlightBlog.posts) {
  posts = starlightBlog.posts;
  
  // 修复链接：确保每篇文章都有正确的href
  posts = posts.map(post => {
    if (!post.href || post.href.includes('undefined')) {
      const blogPath = post.entry.id.replace(/^blog\//, '').replace(/\.mdx?$/, '');
      return {
        ...post,
        href: `/blog/${post.entry.slug || blogPath}`
      };
    }
    return post;
  });
}

// 如果指定了分类，只显示该分类的文章
if (category) {
  posts = posts.filter(post => (post.entry?.data?.category || '未分类') === category);
}

// 按日期排序
posts.sort((a, b) => {
  const dateA = a.entry?.data?.pubDate || a.entry?.data?.date;
  const dateB = b.entry?.data?.pubDate || b.entry?.data?.date;
  return new Date(dateB || 0).getTime() - new Date(dateA || 0).getTime();
});
---

<div class="categories-container">
  <div class="posts-list">
    {posts.map((post) => (
      <a href={post.href} class="post-link">
        {post.title}
      </a>
    ))}
  </div>
</div>

<style>
  .categories-container {
    max-width: var(--sl-content-width);
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .posts-list {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .post-link {
    color: var(--sl-color-text);
    text-decoration: none;
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
  }

  .post-link:hover {
    background-color: var(--sl-color-accent-low);
    color: var(--sl-color-accent);
  }

  @media (max-width: 768px) {
    .posts-list {
      gap: 0.25rem;
    }
  }
</style> 
