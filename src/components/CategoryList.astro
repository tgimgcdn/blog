---
// 从 props 获取分类
const { category } = Astro.props;

// 从 starlightBlog 获取文章数据
const starlightBlog = Astro.locals?.starlightBlog;

// 获取所有文章并按分类组织
const postsByCategory = starlightBlog?.posts?.reduce((acc, post) => {
  const postCategory = post.entry?.data?.category || '未分类';
  if (!acc[postCategory]) {
    acc[postCategory] = [];
  }
  acc[postCategory].push(post);
  return acc;
}, {}) || {};

// 对每个分类的文章按日期排序
Object.keys(postsByCategory).forEach(category => {
  postsByCategory[category].sort((a, b) => {
    const dateA = new Date(a.entry?.data?.pubDate || 0);
    const dateB = new Date(b.entry?.data?.pubDate || 0);
    return dateB.getTime() - dateA.getTime();
  });
});

// 如果指定了特定分类，只显示该分类的文章
const categoriesToShow = category ? { [category]: postsByCategory[category] || [] } : postsByCategory;
---

<div class="categories-container">
  {Object.entries(categoriesToShow).map(([cat, posts]) => (
    <div class="category-section">
      <h2 class="category-title">{cat === 'tech' ? '技术文章' : cat === 'life' ? '生活随笔' : '未分类文章'}</h2>
      <div class="posts-list">
        {posts.map(post => (
          <div class="post-item">
            <a href={post.href} class="post-link">
              {post.entry?.data?.title}
              {post.entry?.data?.tags && (
                <div class="post-tags">
                  {Array.isArray(post.entry.data.tags) 
                    ? post.entry.data.tags.map(tag => (
                        <span class="tag">#{tag}</span>
                      ))
                    : <span class="tag">#{post.entry.data.tags}</span>
                  }
                </div>
              )}
            </a>
          </div>
        ))}
      </div>
    </div>
  ))}
</div>

<style>
  .categories-container {
    max-width: var(--sl-content-width);
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .category-section {
    margin-bottom: 3rem;
  }

  .category-title {
    font-size: 1.5rem;
    color: var(--sl-color-accent);
    margin-bottom: 1.5rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--sl-color-accent-low);
  }

  .posts-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .post-item {
    background: var(--sl-color-bg);
    border-radius: 0.5rem;
    overflow: hidden;
    transition: transform 0.2s;
  }

  .post-item:hover {
    transform: translateX(5px);
  }

  .post-link {
    display: block;
    padding: 1rem;
    text-decoration: none;
    color: var(--sl-color-text);
  }

  .post-tags {
    display: inline-flex;
    gap: 0.5rem;
    margin-left: 0.5rem;
  }

  .tag {
    font-size: 0.8rem;
    color: var(--sl-color-text-accent);
  }

  @media (max-width: 768px) {
    .category-title {
      font-size: 1.25rem;
    }
  }
</style> 
